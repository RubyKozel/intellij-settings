<templateSet group="Yossi">
  <template name="appget" value="app.get('', async (req, res) =&gt; {&#10;  $END$&#10;});" description="Express app.get()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ACTION_SCRIPT" value="false" />
      <option name="ASPECTJ" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ColdFusion" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="GROOVY" value="false" />
      <option name="GSP" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_CODE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="KOTLIN" value="false" />
      <option name="MAVEN" value="false" />
      <option name="MXML" value="false" />
      <option name="OGNL" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="fethen" value="fetch('').then((response) =&gt; {&#10;  response&#10;});" description="fetch.then()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ACTION_SCRIPT" value="false" />
      <option name="ASPECTJ" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ColdFusion" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="GROOVY" value="false" />
      <option name="GSP" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_CODE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="KOTLIN" value="false" />
      <option name="MAVEN" value="false" />
      <option name="MXML" value="false" />
      <option name="OGNL" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="thenc" value="then((result) =&gt; {&#10;  $END$&#10;}).catch((error) =&gt; {&#10;  &#10;});" description="then.()catch()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ACTION_SCRIPT" value="false" />
      <option name="ASPECTJ" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ColdFusion" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="GROOVY" value="false" />
      <option name="GSP" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_CODE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="KOTLIN" value="false" />
      <option name="MAVEN" value="false" />
      <option name="MXML" value="false" />
      <option name="OGNL" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="expressapp" value="const express = require('express');&#10;&#10;const app = express();&#10;const port = process.env.PORT || 5000;&#10;&#10;app.use(express.json());&#10;&#10;app.listen(port, () =&gt; {&#10;  console.log(`Sever is up on port ${port}`);&#10;});" description="Express new app init" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ACTION_SCRIPT" value="false" />
      <option name="ASPECTJ" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ColdFusion" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="GROOVY" value="false" />
      <option name="GSP" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_CODE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="KOTLIN" value="false" />
      <option name="MAVEN" value="false" />
      <option name="MXML" value="false" />
      <option name="OGNL" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="trycatch" value="try {&#10;  $END$&#10;} catch (e) {&#10;  &#10;}" description="try and catch" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ACTION_SCRIPT" value="false" />
      <option name="ASPECTJ" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ColdFusion" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="GROOVY" value="false" />
      <option name="GSP" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_CODE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="KOTLIN" value="false" />
      <option name="MAVEN" value="false" />
      <option name="MXML" value="false" />
      <option name="OGNL" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="routerget" value="router.get('', async (req, res) =&gt; {&#10;  $END$&#10;});" description="Express router.get()" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="ACTION_SCRIPT" value="false" />
      <option name="ASPECTJ" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="ColdFusion" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="GROOVY" value="false" />
      <option name="GSP" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="Handlebars" value="false" />
      <option name="JAVA_CODE" value="false" />
      <option name="JSON" value="false" />
      <option name="JSP" value="false" />
      <option name="KOTLIN" value="false" />
      <option name="MAVEN" value="false" />
      <option name="MXML" value="false" />
      <option name="OGNL" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="rnsc" value="import React from 'react';&#10;import { View } from 'react-native';&#10;&#10;const $TM_FILENAME_BASE$ = () =&gt; {&#10;  return (&#10;    &lt;View&gt;&#10;      $END$&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;export default $TM_FILENAME_BASE$;" description="Creates a stateless React Native component without PropTypes and ES6 module system" toReformat="false" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rnstyle" value="const styles = StyleSheet.create({&#10;  $END$&#10;});" description="Creates a React Native style object" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rnnavigator" value="import { createAppContainer } from 'react-navigation';&#10;import { createStackNavigator } from 'react-navigation-stack';&#10;import $2$ from './src/screens/$2$';&#10;&#10;const navigator = createStackNavigator(&#10;  {&#10;    $1$: $2$&#10;  },&#10;  {&#10;    initialRouteName: '$1$',&#10;    defaultNavigationOptions: {&#10;      title: '$3$'&#10;    }&#10;  }&#10;);&#10;&#10;export default createAppContainer(navigator);" description="Creates a React Native simple navigator" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="3" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rnscstyle" value="import React from 'react';&#10;import { View, StyleSheet } from 'react-native';&#10;&#10;const $TM_FILENAME_BASE$ = () =&gt; {&#10;  return (&#10;    &lt;View&gt;&#10;      $END$&#10;    &lt;/View&gt;&#10;  );&#10;};&#10;&#10;const styles = StyleSheet.create({&#10;  &#10;});&#10;&#10;export default $TM_FILENAME_BASE$;" description="Creates a stateless React Native component without PropTypes with stylesheet and ES6 module system" toReformat="false" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcontext" value="import React from 'react';&#10;&#10;const $TM_FILENAME_BASE$ = React.createContext();&#10;&#10;export const $TM_FILENAME_BASE_PROVIDER$Provider = ({ children }) =&gt; {&#10;  return (&#10;    &lt;$TM_FILENAME_BASE$.Provider &gt;&#10;      { children }&#10;    &lt;/$TM_FILENAME_BASE$.Provider &gt;&#10;  );&#10;};" description="Creates a React simple context" toReformat="false" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <variable name="TM_FILENAME_BASE_PROVIDER" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>